from models import PrivacyTypes, Sexe, WitnessTypes, NameTypes, EventTypes

privacy_type_map = [
    PrivacyTypes.CLEAR,
    PrivacyTypes.NAME_ONLY_DETAILS_BLANK,
    PrivacyTypes.NAME_ONLY_DETAILS_PRIVATE,
    PrivacyTypes.ALL_PRIVATE,
    PrivacyTypes.HIDE_PERSON
]

witness_type_map = dict([
    (0, WitnessTypes.WITNESS),
    (1, WitnessTypes.GODPARENT),
    (2, WitnessTypes.SPONSOR),
    (3, WitnessTypes.LEGAL_WITNESS),
    (4, WitnessTypes.INFORMANT),
    (5, WitnessTypes.PERSON_OF_HONOR),
    (9, WitnessTypes.OTHER),
])

name_type_map = dict([
    (1, NameTypes.ALSO_KNOWN_AS),
    (5, NameTypes.NICK),
    (10, NameTypes.SHORT),
    (15, NameTypes.ADOPTED),
    (20, NameTypes.HEBREW),
    (25, NameTypes.CENSUS),
    (30, NameTypes.MARIIED),
    (35, NameTypes.GERMAN),
    (40, NameTypes.FARM),
    (45, NameTypes.BIRTH),
    (50, NameTypes.INDIAN),
    (55, NameTypes.FORMAL),
    (60, NameTypes.CURRENT),
    (65, NameTypes.SOLDIER),
    (68, NameTypes.FORMERLY_KNOWN_AS),
    (70, NameTypes.RELIGIOUS),
    (80, NameTypes.CALLED),
    (85, NameTypes.INDIGENOUS),
    (88, NameTypes.TOMBSTONE),
    (95, NameTypes.OTHER),
])

event_type_map = dict([
    (1, EventTypes.BORN),
    (5, EventTypes.BAPTIZED),
    (9, EventTypes.CHRISTENED),
    (13, EventTypes.DIED),
    (16, EventTypes.BURRIED),
    (19, EventTypes.CREMATED),
    (23, EventTypes.ADOPTED_BY_BOTH),
    (30, EventTypes.ADOPTED_BY_FATHER),
    (40, EventTypes.ADOPTED_BY_MOTHER),
    (50, EventTypes.BAPTIZED_LDS),
    (60, EventTypes.BAR_MITZVAH),
    (70, EventTypes.BAR_MITZVAH),
    (80, EventTypes.BLESSING),
    (82, EventTypes.BRIT_MILAH),
    (85, EventTypes.CENSUS),
    (90, EventTypes.CHRISTENED_ADULT),
    (100, EventTypes.CONFIRMATION),
    (110, EventTypes.CONFIRMATION_LDS),
    (120, EventTypes.EMIGRATED),
    (130, EventTypes.ENDOWMENT_LDS),
    (140, EventTypes.EVENT),
    (150, EventTypes.FIRST_COMMUNION),
    (155, EventTypes.FUNERAL),
    (160, EventTypes.GRADUATED),
    (170, EventTypes.IMIGRATED),
    (174, EventTypes.INTERRED),
    (180, EventTypes.NATURALIZED),
    (190, EventTypes.ORDNINATION),
    (200, EventTypes.PROBATE),
    (210, EventTypes.RETIREMENT),
    (215, EventTypes.RESIDED),
    (220, EventTypes.SEALED_CHILD_LDS),
    (230, EventTypes.WILL_SIGNED),
    (233, EventTypes.VARTZEIT),
    (235, EventTypes.VERIFY_HOME_CHRISTENING),
    (236, EventTypes.CHURCHING_OF_WOMAN),
    (237, EventTypes.MEMORIAL_SERVICE),
    (340, None),
    (380, None),
    (381, EventTypes.NOT_LIVING),
    (385, EventTypes.NEVER_MARRIED),
    (388, EventTypes.NO_CHILDREN_FROM_PERSON),
    (399, None),
    (401, EventTypes.OCCUPATION),
    (405, EventTypes.MILITARY),
    (410, EventTypes.RELIGION),
    (420, EventTypes.EDUCATION),
    (430, EventTypes.NATIONALITY),
    (440, EventTypes.CASTE),
    (450, EventTypes.REF_NUMBER),
    (460, EventTypes.AFN_NUMER),
    (470, EventTypes.SOCIAL_SECURITY_NUMBER),
    (480, EventTypes.PERMANENT_NUMBER),
    (490, EventTypes.ID_NUMBER),
    (492, EventTypes.Y_DNA),
    (494, EventTypes.MT_DNA),
    (496, EventTypes.AT_DNA),
    (502, EventTypes.LEGAL_NAME_CHANGE),
    (510, EventTypes.HEIGHT),
    (520, EventTypes.WEIGHT),
    (530, EventTypes.EYE_COLOR),
    (540, EventTypes.HAIR_COLOR),
    (550, EventTypes.DESCRIPTION),
    (555, EventTypes.PROPERTY),
    (560, EventTypes.MEDICAL_CONDITION),
    (570, EventTypes.CAUSE_OF_DEATH),
    (580, EventTypes.NUMBER_OF_CHILDREN_PERSON),
    (590, EventTypes.ANCESTOR_INTEREST),
    (600, EventTypes.DESCENDANT_INTEREST),
    (660, None),
    (701, EventTypes.MARRIED),
    (703, EventTypes.MARRIED_CIVIL),
    (705, EventTypes.MARRIED_RELIGIOUS),
    (710, EventTypes.DIVORCED),
    (720, EventTypes.MARRIED_BANN),
    (725, EventTypes.MARRIAGE_BOND),
    (730, EventTypes.MARRIAGE_CONTRACT),
    (740, EventTypes.MARRIAGE_LICENSE),
    (750, EventTypes.MARRIAGE_SETTLEMENT),
    (753, EventTypes.MARRIAGE_INTENTION),
    (760, EventTypes.DIVORCE_FILED),
    (770, EventTypes.SEPARATED),
    (780, EventTypes.ANULLED),
    (790, EventTypes.ENGAGED),
    (800, EventTypes.SEALED_TO_SPOUSE_LDS),
    (805, EventTypes.RESIDED_FAMILY),
    (810, EventTypes.EVENT_FAMILY),
    (814, EventTypes.CENSUS_FAMILY),
    (830, None),
    (860, None),
    (910, EventTypes.NOT_MARRIED),
    (920, EventTypes.COMMON_LAW),
    (930, EventTypes.NO_CHILDREN_FROM_THIS_MARRIAGE),
    (936, None),
    (940, EventTypes.NUMBER_OF_CHILDREN_FAMILY),
    (960, EventTypes.MARRIAGE_ID),
    (970, EventTypes.MARRIAGE_REF),
])

sexe_type_map = dict([
    (0, Sexe.UNKNOWN),
    (1, Sexe.MAN),
    (2, Sexe.WOMAN),
])
